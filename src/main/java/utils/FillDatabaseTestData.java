package utils;

import database.dao.EntitiesDao;
import database.dao.ProductDao;
import database.dao.DocsDao;
import database.dbUtils.DbManager;
import database.dbUtils.FillSupportTables;
import database.models.Docs;
import database.models.entitesModel.Business;
import database.models.entitesModel.Contractor;
import database.models.Product;
import database.models.saleDocModel.InvoiceBuy;
import database.models.saleDocModel.InvoiceSale;
import database.models.saleDocModel.Receipt;
import database.models.storeDocModel.ReceivingDoc;
import database.models.storeDocModel.ReleaseDoc;
import modelFx.itemsToModels.ListProductsToAddDoc;
import modelFx.itemsToModels.RateProductsToAddDoc;
import utils.exceptions.ApplicationException;

import java.io.*;
import java.sql.Date;
import java.util.ArrayList;

public class FillDatabaseTestData {
    public static void fillAllTables(){
        fillBusinessTable();
        fillContractorTable();
        fillProductTable();
        fillSalesDocTable();
        fillStoreDocTable();
    }

    private static void fillBusinessTable(){
        Business business = createBusiness("Tetetex Micha³ Ulik","4323232877",
                "Przybys³awice","27","530","","59","Polska",
                true, "Przybys³awice","27","530","","59","Polska",
                "722735666","324452145","tetetex@gmail.com","www.tetex.com",
                "73","3551","4792","7793","8652","0000","0101");

        EntitiesDao entitiesDao = new EntitiesDao();
        try {
            entitiesDao.createOrUpdate(business);
        } catch (ApplicationException e) {
            e.printStackTrace();
        }
        DbManager.closeConnectionSource();
    }

    private static void fillProductTable(){
        Product product1 = createProduct(0, 100,"mleko",0,2,2,"","124125215214",
                "","fw215f2aa224","Mlekowita 2litry/opakowanie",2.00,2,"2,10",
                2.49,"2,61","24,5","0,49");

        Product product2 = createProduct(1,0,"Uk³adanie p³ytek",1,0,0,"1222354543","",
                "","","",0,0,"98,40",
                120.00,"147,60","50,0","40,00");

        Product product3 = createProduct(0,50,"Wêgiel",2,1,1,"54645743463","",
                "","32tgf3s63s","",400.00,2,"420,00",
                600.00,"648,00","50,0","200,00");

        Product product4 = createProduct(0,100,"Ziemniaki",2,2,0,"","",
                "","123241","M³ode, œwie¿e",0.99,2,"1,07",
                1.2,"1,30","21,2","0,21");

        ProductDao productDao = new ProductDao();
        try {
            productDao.createOrUpdate(product1);
            productDao.createOrUpdate(product2);
            productDao.createOrUpdate(product3);
            productDao.createOrUpdate(product4);
        } catch (ApplicationException e) {
            System.out.println(e.getMessage());
        }
        DbManager.closeConnectionSource();
    }


    private static void fillContractorTable(){
        Contractor contractor1 = createContractor("Bud-Mar s.c Zbigniew Mazur","1234567397","",
                "O¿arów", "27","530","Kolejowa","120","Polska",
                false,"O¿arów","27","530","Osiedle Wzgórze","23/16","Polska",
                "722735666","324452145","mazur@gmail.com","www.ugabugapszczulka.com","","","","","","","");

        Contractor contractor2 = createContractor("Micha³ Ulik","","95040600112",
                "Przybys³awice", "27","530","","59","Polska",
                true,"Przybys³awice","27","530","","59","Polska",
                "733797677","","lucek950@gmail.com","","","","","","","","");

        Contractor contractor3 = createContractor("AgriCorn Katarzyna Dulska","4980267397","",
                "Piekary Œl¹skie", "41","945","3-go Maja","57","Polska",
                true,"Piekary Œl¹skie","41","945","3-go Maja","57","Polska",
                "666572966","","","","54","0004","4536","7968","6742","5556","8787");

        EntitiesDao entitiesDao = new EntitiesDao();
        try {
            entitiesDao.createOrUpdate(contractor1);
            entitiesDao.createOrUpdate(contractor2);
            entitiesDao.createOrUpdate(contractor3);
        } catch (ApplicationException e) {
            e.printStackTrace();
        }
        DbManager.closeConnectionSource();
    }

    private static void fillSalesDocTable(){
        InvoiceSale invoiceSale1 = (InvoiceSale) createSalesDoc(0,0,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "Bud-Mar s.c Zbigniew Mazur","O¿arów","27","530","Kolejowa","120","1234567397","", "FS 1/2000","Faktura VAT 1/2000","","Przybys³awice","2022-02-13","2022-02-15",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 64, -97, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 5, 64, 32, 0, 0, 0, 0, 0, 4, 64, 110, 0, 0, 0, 0, 0, 0, 64, -124, 64, 0, 0, 0, 0, 0, 64, -126, -64, 0, 0, 0, 0, 0, 64, 121, 0, 0, 0, 0, 0, 0, 64, -126, -64, 0, 0, 0, 0, 0, 64, -87, 80, 0, 0, 0, 0, 0, 64, -89, 112, 0, 0, 0, 0, 0, 116, 0, 8, 87, -60, -103, 103, 105, 101, 108, 32, 116, 0, 0, 116, 0, 2, 109, 50, 116, 0, 1, 56, 115, 113, 0, 126, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 10, 64, 55, 0, 0, 0, 0, 0, 0, 64, 113, 64, 0, 0, 0, 0, 0, 64, 98, 115, 51, 51, 51, 51, 51, 64, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 94, 0, 0, 0, 0, 0, 0, 64, -105, 16, 0, 0, 0, 0, 0, 64, -110, -64, 0, 0, 0, 0, 0, 116, 0, 19, 85, 107, -59, -126, 97, 100, 97, 110, 105, 101, 32, 112, -59, -126, 121, 116, 101, 107, 32, 113, 0, 126, 0, 6, 116, 0, 2, 107, 103, 116, 0, 2, 50, 51, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 64, 32, 0, 0, 0, 0, 0, 4, 64, 110, 0, 0, 0, 0, 0, 0, 64, -87, 80, 0, 0, 0, 0, 0, 64, -89, 112, 0, 0, 0, 0, 0, 116, 0, 1, 56, 115, 113, 0, 126, 0, 2, 64, 55, 0, 0, 0, 0, 0, 0, 64, 113, 64, 0, 0, 0, 0, 0, 64, -105, 16, 0, 0, 0, 0, 0, 64, -110, -64, 0, 0, 0, 0, 0, 116, 0, 2, 50, 51, 120},
                "4200,00","516,00","4716,00","4716,00","cztery tysi¹ce siedemset szesnaœcie PLN 0/100",1,true,"2022-02-13","Micha³ Ulik");

        InvoiceSale invoiceSale2 = (InvoiceSale) createSalesDoc(0,1,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "AgriCorn Katarzyna Dulska","Piekary Œl¹skie","41","945","3-go Maja","57","4980267397","", "FS 2/2000","Faktura VAT 2/2000","PA 1/2000","Przybys³awice","2022-02-13","2022-02-13",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 100, 64, 55, 0, 0, 0, 0, 0, 0, 64, -98, 48, 0, 0, 0, 0, 0, 64, 98, 115, 51, 51, 51, 51, 51, 64, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 85, 0, 0, 0, 0, 0, 0, 64, -60, 46, 0, 0, 0, 0, 0, 64, -64, 104, 0, 0, 0, 0, 0, 116, 0, 19, 85, 107, -59, -126, 97, 100, 97, 110, 105, 101, 32, 112, -59, -126, 121, 116, 101, 107, 32, 116, 0, 0, 116, 0, 2, 107, 103, 116, 0, 2, 50, 51, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 64, 55, 0, 0, 0, 0, 0, 0, 64, -98, 48, 0, 0, 0, 0, 0, 64, -60, 46, 0, 0, 0, 0, 0, 64, -64, 104, 0, 0, 0, 0, 0, 116, 0, 2, 50, 51, 120},
                "8400,00","1932,00","10332,00","10332,00","dziesiêæ tysiêcy trzysta trzydzieœci dwa PLN 0/100",1,false,"2022-02-13","Micha³ Ulik");

        InvoiceBuy invoiceBuy = (InvoiceBuy) createSalesDoc(1,1,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "AgriCorn Katarzyna Dulska","Piekary Œl¹skie","41","945","3-go Maja","57","4980267397","", "RZ 1/2000","Rachunek zakupu 1/2000","xyz","Przybys³awice","2022-02-25","2022-03-06",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 64, 83, -52, -52, -52, -52, -52, -51, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, -16, -95, -54, -64, -125, 18, 111, 63, -17, -82, 20, 122, -31, 71, -82, 63, -17, -82, 20, 122, -31, 71, -82, 63, -20, 122, -31, 71, -82, 20, 123, 64, 81, -52, -52, -52, -52, -52, -51, 64, 81, -52, -52, -52, -52, -52, -51, 116, 0, 26, 90, 105, 101, 109, 110, 105, 97, 107, 105, 32, 77, -59, -126, 111, 100, 101, 44, 32, -59, -101, 119, 105, 101, -59, -68, 101, 116, 0, 0, 116, 0, 2, 109, 50, 116, 0, 2, 90, 87, 115, 113, 0, 126, 0, 2, 64, -10, -113, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 122, 64, 0, 0, 0, 0, 0, 64, 121, 0, 0, 0, 0, 0, 0, 64, 121, 0, 0, 0, 0, 0, 0, 64, 107, -128, 0, 0, 0, 0, 0, 64, -24, -48, -128, 0, 0, 0, 0, 64, -24, -48, -128, 0, 0, 0, 0, 116, 0, 8, 87, -60, -103, 103, 105, 101, 108, 32, 113, 0, 126, 0, 6, 113, 0, 126, 0, 7, 113, 0, 126, 0, 8, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, -24, -39, 102, 102, 102, 102, 102, 64, -24, -39, 102, 102, 102, 102, 102, 116, 0, 2, 90, 87, 120},
                "50891,20","0,00","50891,20","50891,20","piêædziesi¹t tysiêcy osiemset dziewiêædziesi¹t jeden PLN 20/100",1,true,"2022-02-27","Katarzyna Dulska");

        Receipt receipt = (Receipt) createSalesDoc(2,0,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "","","","","","","","", "PA 1/2000","Paragon 1/2000","","Przybys³awice","2021-12-01","2021-12-22",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 64, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 50, 64, 20, 0, 0, 0, 0, 0, 5, 64, 22, 0, 0, 0, 0, 0, 0, 64, 4, -22, 126, -7, -37, 34, -46, 64, 3, -21, -123, 30, -72, 81, -20, 64, 0, 0, 0, 0, 0, 0, 0, 64, 1, 30, -72, 81, -21, -123, 31, 64, 92, 32, 0, 0, 0, 0, 0, 64, 90, -64, 0, 0, 0, 0, 0, 116, 0, 33, 109, 108, 101, 107, 111, 32, 77, 108, 101, 107, 111, 119, 105, 116, 97, 32, 50, 108, 105, 116, 114, 121, 47, 111, 112, 97, 107, 111, 119, 97, 110, 105, 101, 116, 0, 0, 116, 0, 3, 115, 122, 116, 116, 0, 1, 53, 115, 113, 0, 126, 0, 2, 64, 51, -52, -52, -52, -52, -52, -51, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 20, 64, 20, 0, 0, 0, 0, 0, 5, 63, -13, 51, 51, 51, 51, 51, 51, 63, -12, 40, -11, -62, -113, 92, 41, 63, -13, 51, 51, 51, 51, 51, 51, 63, -17, -82, 20, 122, -31, 71, -82, 63, -13, 51, 51, 51, 51, 51, 51, 64, 57, 51, 51, 51, 51, 51, 51, 64, 56, 0, 0, 0, 0, 0, 0, 116, 0, 26, 90, 105, 101, 109, 110, 105, 97, 107, 105, 32, 77, -59, -126, 111, 100, 101, 44, 32, -59, -101, 119, 105, 101, -59, -68, 101, 113, 0, 126, 0, 6, 116, 0, 2, 109, 50, 113, 0, 126, 0, 8, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 64, 20, 0, 0, 0, 0, 0, 5, 64, 26, -52, -52, -52, -52, -52, -51, 64, 97, 54, 102, 102, 102, 102, 102, 64, 96, 96, 0, 0, 0, 0, 0, 116, 0, 1, 53, 120},
                "131,00","6,70","137,70","137,70","sto trzydzieœci siedem PLN 70/100",0,false,null,"Micha³ Ulik");

        DocsDao docsDao = new DocsDao();
        try {
            docsDao.createOrUpdate(invoiceSale1);
            docsDao.createOrUpdate(invoiceSale2);
            docsDao.createOrUpdate(invoiceBuy);
            docsDao.createOrUpdate(receipt);
        } catch (ApplicationException e) {
            e.printStackTrace();
        }
        DbManager.closeConnectionSource();
    }

    private static void fillStoreDocTable(){
        ReceivingDoc receivingDoc = (ReceivingDoc) createStoreDoc(0,0,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "AgriCorn Katarzyna Dulska","Piekary Œl¹skie","41","945","3-go Maja","57","4980267397","", "PZ 1/2000","Auto PZ 1/2000","xyz","Przybys³awice","2022-02-25",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 64, 83, -52, -52, -52, -52, -52, -51, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, -16, -95, -54, -64, -125, 18, 111, 63, -17, -82, 20, 122, -31, 71, -82, 63, -17, -82, 20, 122, -31, 71, -82, 63, -20, 122, -31, 71, -82, 20, 123, 64, 81, -52, -52, -52, -52, -52, -51, 64, 81, -52, -52, -52, -52, -52, -51, 116, 0, 26, 90, 105, 101, 109, 110, 105, 97, 107, 105, 32, 77, -59, -126, 111, 100, 101, 44, 32, -59, -101, 119, 105, 101, -59, -68, 101, 116, 0, 0, 116, 0, 2, 109, 50, 116, 0, 2, 90, 87, 115, 113, 0, 126, 0, 2, 64, -10, -113, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 122, 64, 0, 0, 0, 0, 0, 64, 121, 0, 0, 0, 0, 0, 0, 64, 121, 0, 0, 0, 0, 0, 0, 64, 107, -128, 0, 0, 0, 0, 0, 64, -24, -48, -128, 0, 0, 0, 0, 64, -24, -48, -128, 0, 0, 0, 0, 116, 0, 8, 87, -60, -103, 103, 105, 101, 108, 32, 113, 0, 126, 0, 6, 113, 0, 126, 0, 7, 113, 0, 126, 0, 8, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, -24, -39, 102, 102, 102, 102, 102, 64, -24, -39, 102, 102, 102, 102, 102, 116, 0, 2, 90, 87, 120},
                "50891,20","50891,20","piêædziesi¹t tysiêcy osiemset dziewiêædziesi¹t jeden PLN 20/100","Katarzyna Dulska", "RZ 1/2000");

        ReleaseDoc releaseDoc1 = (ReleaseDoc) createStoreDoc(1,0,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "AgriCorn Katarzyna Dulska","Piekary Œl¹skie","41","945","3-go Maja","57","4980267397","", "WZ 2/2000","Auto WZ 2/2022",null,"Przybys³awice","2022-02-13",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 100, 64, 55, 0, 0, 0, 0, 0, 0, 64, -98, 48, 0, 0, 0, 0, 0, 64, 98, 115, 51, 51, 51, 51, 51, 64, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 85, 0, 0, 0, 0, 0, 0, 64, -60, 46, 0, 0, 0, 0, 0, 64, -64, 104, 0, 0, 0, 0, 0, 116, 0, 19, 85, 107, -59, -126, 97, 100, 97, 110, 105, 101, 32, 112, -59, -126, 121, 116, 101, 107, 32, 116, 0, 0, 116, 0, 2, 107, 103, 116, 0, 2, 50, 51, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 64, 55, 0, 0, 0, 0, 0, 0, 64, -98, 48, 0, 0, 0, 0, 0, 64, -60, 46, 0, 0, 0, 0, 0, 64, -64, 104, 0, 0, 0, 0, 0, 116, 0, 2, 50, 51, 120},
                "8400,00","10332,00","dziesiêæ tysiêcy trzysta trzydzieœci dwa PLN 0/100","Micha³ Ulik", "FS 2/2000");

        ReleaseDoc releaseDoc2 = (ReleaseDoc) createStoreDoc(1,0,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "Bud-Mar s.c Zbigniew Mazur","O¿arów","27","530","Kolejowa","120","1234567397","", "WZ 1/2000","Auto WZ 1/2000",null,"Przybys³awice","2022-02-13",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 64, -97, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 5, 64, 32, 0, 0, 0, 0, 0, 4, 64, 110, 0, 0, 0, 0, 0, 0, 64, -124, 64, 0, 0, 0, 0, 0, 64, -126, -64, 0, 0, 0, 0, 0, 64, 121, 0, 0, 0, 0, 0, 0, 64, -126, -64, 0, 0, 0, 0, 0, 64, -87, 80, 0, 0, 0, 0, 0, 64, -89, 112, 0, 0, 0, 0, 0, 116, 0, 8, 87, -60, -103, 103, 105, 101, 108, 32, 116, 0, 0, 116, 0, 2, 109, 50, 116, 0, 1, 56, 115, 113, 0, 126, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 10, 64, 55, 0, 0, 0, 0, 0, 0, 64, 113, 64, 0, 0, 0, 0, 0, 64, 98, 115, 51, 51, 51, 51, 51, 64, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 94, 0, 0, 0, 0, 0, 0, 64, -105, 16, 0, 0, 0, 0, 0, 64, -110, -64, 0, 0, 0, 0, 0, 116, 0, 19, 85, 107, -59, -126, 97, 100, 97, 110, 105, 101, 32, 112, -59, -126, 121, 116, 101, 107, 32, 113, 0, 126, 0, 6, 116, 0, 2, 107, 103, 116, 0, 2, 50, 51, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 64, 32, 0, 0, 0, 0, 0, 4, 64, 110, 0, 0, 0, 0, 0, 0, 64, -87, 80, 0, 0, 0, 0, 0, 64, -89, 112, 0, 0, 0, 0, 0, 116, 0, 1, 56, 115, 113, 0, 126, 0, 2, 64, 55, 0, 0, 0, 0, 0, 0, 64, 113, 64, 0, 0, 0, 0, 0, 64, -105, 16, 0, 0, 0, 0, 0, 64, -110, -64, 0, 0, 0, 0, 0, 116, 0, 2, 50, 51, 120},
                "4200,00","4716,00","cztery tysi¹ce siedemset szesnaœcie PLN 0/100","Micha³ Ulik", "FS 1/2000");

        ReleaseDoc releaseDoc3 = (ReleaseDoc) createStoreDoc(1,0,"Tetetex Micha³ Ulik","Przybys³awice","27","530","","59","4323232877","722735666","73","3551","4792","7793","8652","0000","0101",
                "","","","","","","","", "WZ 3/2000","Auto WZ 3/2000",null,"Przybys³awice","2021-12-01",
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 2, 119, 4, 0, 0, 0, 2, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 76, 105, 115, 116, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -84, -121, 3, -29, 23, -59, 103, 26, 2, 0, 18, 68, 0, 4, 99, 111, 115, 116, 73, 0, 8, 100, 105, 115, 99, 111, 117, 110, 116, 73, 0, 13, 105, 100, 80, 114, 111, 100, 117, 99, 116, 84, 121, 112, 101, 73, 0, 2, 108, 112, 73, 0, 9, 112, 114, 111, 100, 117, 99, 116, 73, 100, 73, 0, 8, 113, 117, 97, 110, 116, 105, 116, 121, 68, 0, 7, 114, 97, 116, 101, 86, 97, 116, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 14, 117, 110, 105, 116, 80, 114, 105, 99, 101, 71, 114, 111, 115, 115, 68, 0, 12, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 68, 0, 15, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 66, 117, 121, 68, 0, 24, 117, 110, 105, 116, 80, 114, 105, 99, 101, 78, 101, 116, 87, 105, 116, 104, 68, 105, 115, 99, 111, 117, 110, 116, 68, 0, 8, 118, 111, 108, 71, 114, 111, 115, 115, 68, 0, 6, 118, 111, 108, 78, 101, 116, 76, 0, 4, 110, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 112, 107, 119, 73, 117, 67, 78, 113, 0, 126, 0, 3, 76, 0, 4, 117, 110, 105, 116, 113, 0, 126, 0, 3, 76, 0, 3, 118, 97, 116, 113, 0, 126, 0, 3, 120, 112, 64, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 50, 64, 20, 0, 0, 0, 0, 0, 5, 64, 22, 0, 0, 0, 0, 0, 0, 64, 4, -22, 126, -7, -37, 34, -46, 64, 3, -21, -123, 30, -72, 81, -20, 64, 0, 0, 0, 0, 0, 0, 0, 64, 1, 30, -72, 81, -21, -123, 31, 64, 92, 32, 0, 0, 0, 0, 0, 64, 90, -64, 0, 0, 0, 0, 0, 116, 0, 33, 109, 108, 101, 107, 111, 32, 77, 108, 101, 107, 111, 119, 105, 116, 97, 32, 50, 108, 105, 116, 114, 121, 47, 111, 112, 97, 107, 111, 119, 97, 110, 105, 101, 116, 0, 0, 116, 0, 3, 115, 122, 116, 116, 0, 1, 53, 115, 113, 0, 126, 0, 2, 64, 51, -52, -52, -52, -52, -52, -51, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 20, 64, 20, 0, 0, 0, 0, 0, 5, 63, -13, 51, 51, 51, 51, 51, 51, 63, -12, 40, -11, -62, -113, 92, 41, 63, -13, 51, 51, 51, 51, 51, 51, 63, -17, -82, 20, 122, -31, 71, -82, 63, -13, 51, 51, 51, 51, 51, 51, 64, 57, 51, 51, 51, 51, 51, 51, 64, 56, 0, 0, 0, 0, 0, 0, 116, 0, 26, 90, 105, 101, 109, 110, 105, 97, 107, 105, 32, 77, -59, -126, 111, 100, 101, 44, 32, -59, -101, 119, 105, 101, -59, -68, 101, 113, 0, 126, 0, 6, 116, 0, 2, 109, 50, 113, 0, 126, 0, 8, 120},
                new byte[]{-84, -19, 0, 5, 115, 114, 0, 19, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 65, 114, 114, 97, 121, 76, 105, 115, 116, 120, -127, -46, 29, -103, -57, 97, -99, 3, 0, 1, 73, 0, 4, 115, 105, 122, 101, 120, 112, 0, 0, 0, 1, 119, 4, 0, 0, 0, 1, 115, 114, 0, 42, 109, 111, 100, 101, 108, 70, 120, 46, 105, 116, 101, 109, 115, 84, 111, 77, 111, 100, 101, 108, 115, 46, 82, 97, 116, 101, 80, 114, 111, 100, 117, 99, 116, 115, 84, 111, 65, 100, 100, 68, 111, 99, -20, -119, -122, 46, 28, 37, 105, 49, 2, 0, 5, 68, 0, 4, 114, 97, 116, 101, 68, 0, 6, 115, 117, 109, 86, 97, 116, 68, 0, 10, 118, 111, 108, 117, 109, 101, 71, 97, 105, 110, 68, 0, 9, 118, 111, 108, 117, 109, 101, 78, 101, 116, 76, 0, 3, 118, 97, 116, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 120, 112, 64, 20, 0, 0, 0, 0, 0, 5, 64, 26, -52, -52, -52, -52, -52, -51, 64, 97, 54, 102, 102, 102, 102, 102, 64, 96, 96, 0, 0, 0, 0, 0, 116, 0, 1, 53, 120},
                "131,00","137,70","sto trzydzieœci siedem PLN 70/100","Micha³ Ulik","PA 1/2000");

        DocsDao docsDao = new DocsDao();
        try {
            docsDao.createOrUpdate(receivingDoc);
            docsDao.createOrUpdate(releaseDoc1);
            docsDao.createOrUpdate(releaseDoc2);
            docsDao.createOrUpdate(releaseDoc3);
        } catch (ApplicationException e) {
            e.printStackTrace();
        }
        DbManager.closeConnectionSource();
    }

    private static Business createBusiness(String name, String nip, String town, String zc1, String zc2, String street, String address, String country,
                                               boolean postSame, String townPost, String zc1Post, String zc2Post, String streetPost, String addressPost, String countryPost,
                                               String phone, String fax, String email, String website, String bank1, String bank2, String bank3, String bank4, String bank5, String bank6, String bank7){
        Business business = new Business();
        business.setId(1);
        business.setName(name);
        business.setNip(nip);
        business.setTown(town);
        business.setZc1(zc1);
        business.setZc2(zc2);
        business.setStreet(street);
        business.setAddress(address);
        business.setCountry(country);
        business.setPostSame(postSame);
        business.setTownPost(townPost);
        business.setZcPost(zc1Post);
        business.setZc2Post(zc2Post);
        business.setStreetPost(streetPost);
        business.setAddressPost(addressPost);
        business.setCountryPost(countryPost);
        business.setPhone(phone);
        business.setFax(fax);
        business.setEmail(email);
        business.setWebsite(website);
        business.setBank1(bank1);
        business.setBank2(bank2);
        business.setBank3(bank3);
        business.setBank4(bank4);
        business.setBank5(bank5);
        business.setBank6(bank6);
        business.setBank7(bank7);
        return business;
    }

    private static Contractor createContractor(String name, String nip, String pesel, String town, String zc1, String zc2, String street, String address, String country,
                                               boolean postSame, String townPost, String zc1Post, String zc2Post, String streetPost, String addressPost, String countryPost,
                                               String phone, String fax, String email, String website, String bank1, String bank2, String bank3, String bank4, String bank5, String bank6, String bank7){
        Contractor contractor = new Contractor();
        contractor.setName(name);
        contractor.setNip(nip);
        contractor.setPesel(pesel);
        contractor.setTown(town);
        contractor.setZc1(zc1);
        contractor.setZc2(zc2);
        contractor.setStreet(street);
        contractor.setAddress(address);
        contractor.setCountry(country);
        contractor.setPostSame(postSame);
        contractor.setTownPost(townPost);
        contractor.setZcPost(zc1Post);
        contractor.setZc2Post(zc2Post);
        contractor.setStreetPost(streetPost);
        contractor.setAddressPost(addressPost);
        contractor.setCountryPost(countryPost);
        contractor.setPhone(phone);
        contractor.setFax(fax);
        contractor.setEmail(email);
        contractor.setWebsite(website);
        contractor.setBank1(bank1);
        contractor.setBank2(bank2);
        contractor.setBank3(bank3);
        contractor.setBank4(bank4);
        contractor.setBank5(bank5);
        contractor.setBank6(bank6);
        contractor.setBank7(bank7);
        return contractor;
    }

    private static Product createProduct(int type, double quantity,String name, int units, int saleVat, int gtu, String code, String catalog, String pkwiuCn, String barcode, String desc, double buyNet, int buyVat, String buyGross, double saleNet, String saleGross, String overhead, String gain){
        Product product = new Product();
        product.setTypeProduct(FillSupportTables.getTypeList().get(type));
        product.setQuantity(quantity);
        product.setName(name);
        product.setUnitsProduct(FillSupportTables.getUnitsList().get(units));
        product.setVatProduct(FillSupportTables.getVatList().get(saleVat));
        product.setGtuProduct(FillSupportTables.getGtuList().get(gtu));
        product.setProductCode(code);
        product.setNrCatalog(catalog);
        product.setPkwIuCN(pkwiuCn);
        product.setBarcode(barcode);
        product.setDescription(desc);
        product.setBuyNetPrice(buyNet);
        product.setBuyVatProduct(FillSupportTables.getVatList().get(buyVat));
        product.setBuyGrossPrice(buyGross);
        product.setSaleNetPrice(saleNet);
        product.setSaleGrossPrice(saleGross);
        product.setOverhead(overhead);
        product.setGainNet(gain);
        return product;
    }

    protected static Object convertBytesToObject(byte[] bytes)
            throws IOException, ClassNotFoundException {
        InputStream is = new ByteArrayInputStream(bytes);
        try (ObjectInputStream ois = new ObjectInputStream(is)) {
            return ois.readObject();
        }
    }

    private static Docs createSalesDoc(int typeSalesDoc, int typeInvoice, String nameBusiness, String townBusiness, String zc1Business, String zc2Business, String streetBusiness, String addressBusiness, String nipBusiness, String phoneBusiness, String bank1Business, String bank2Business, String bank3Business, String bank4Business, String bank5Business, String bank6Business, String bank7Business,
                                       String nameContractor, String townContractor, String zc1Contractor, String zc2Contractor, String streetContractor, String addressContractor, String nipContractor, String peselContractor,
                                       String number, String numberDoc, String additionalDoc, String issuePlace, String issueDate, String executeDate, byte[] listProduct, byte[] ratesProduct,
                                       String net, String amount, String gross, String price, String words, int method, boolean split, String paymentDate, String issued){
        Docs docs = null;
        switch (typeSalesDoc){
            case 0:
                docs = new InvoiceSale();
                docs.setPaymentDate(Date.valueOf(paymentDate));
                break;
            case 1:
                docs = new InvoiceBuy();
                docs.setPaymentDate(Date.valueOf(paymentDate));
                break;
            case 2:
                docs = new Receipt();
                break;
        }
        assert docs != null;
        docs.setProjectDoc(FillSupportTables.getTypeSaleDocList().get(typeSalesDoc).getProjectDocs().get(typeInvoice));
        docs.setNameBus(nameBusiness);
        docs.setTownBus(townBusiness);
        docs.setZc1Bus(zc1Business);
        docs.setZc2Bus(zc2Business);
        docs.setStreetBus(streetBusiness);
        docs.setAddressBus(addressBusiness);
        docs.setNipBus(nipBusiness);
        docs.setPhoneBus(phoneBusiness);
        docs.setBank1Bus(bank1Business);
        docs.setBank2Bus(bank2Business);
        docs.setBank3Bus(bank3Business);
        docs.setBank4Bus(bank4Business);
        docs.setBank5Bus(bank5Business);
        docs.setBank6Bus(bank6Business);
        docs.setBank7Bus(bank7Business);
        docs.setNameCon(nameContractor);
        docs.setTownCon(townContractor);
        docs.setZc1Con(zc1Contractor);
        docs.setZc2Con(zc2Contractor);
        docs.setStreetCon(streetContractor);
        docs.setAddressCon(addressContractor);
        docs.setNipCon(nipContractor);
        docs.setPeselCon(peselContractor);
        docs.setNumber(number);
        docs.setNumberToPrint(numberDoc);
        docs.setAdditionalDoc(additionalDoc);
        docs.setIssuePlace(issuePlace);
        docs.setIssueDate(Date.valueOf(issueDate));
        docs.setExecuteDate(Date.valueOf(executeDate));
        try {
            docs.setListProductToAddDocs((ArrayList<ListProductsToAddDoc>) convertBytesToObject(listProduct));
            docs.setListRateProductsToAddDocs((ArrayList<RateProductsToAddDoc>) convertBytesToObject(ratesProduct));
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        docs.setRateSumNet(net);
        docs.setRateSumVat(amount);
        docs.setRateSumGross(gross);
        docs.setPriceToPay(price);
        docs.setPriceToPayInWords(words);
        docs.setPaymentMethod(FillSupportTables.getPaymentMethodList().get(method));
        docs.setSplitPayment(split);
        docs.setIssued(issued);
        return docs;
    }

    private static Docs createStoreDoc(int typeStoreDoc, int typeDoc, String nameBusiness, String townBusiness, String zc1Business, String zc2Business, String streetBusiness, String addressBusiness, String nipBusiness, String phoneBusiness, String bank1Business, String bank2Business, String bank3Business, String bank4Business, String bank5Business, String bank6Business, String bank7Business,
                                       String nameContractor, String townContractor, String zc1Contractor, String zc2Contractor, String streetContractor, String addressContractor, String nipContractor, String peselContractor,
                                       String number, String numberDoc, String additionalDoc, String issuePlace, String issueDate, byte[] listProduct, byte[] ratesProduct,
                                       String cost, String price, String words, String issued, String relatedDoc){
        Docs docs = null;
        switch (typeStoreDoc){
            case 0:
                docs = new ReceivingDoc();
                break;
            case 1:
                docs = new ReleaseDoc();
                break;
        }
        assert docs != null;
        docs.setProjectDoc(FillSupportTables.getTypeStoreDocList().get(typeStoreDoc).getProjectDocs().get(typeDoc));
        docs.setNameBus(nameBusiness);
        docs.setTownBus(townBusiness);
        docs.setZc1Bus(zc1Business);
        docs.setZc2Bus(zc2Business);
        docs.setStreetBus(streetBusiness);
        docs.setAddressBus(addressBusiness);
        docs.setNipBus(nipBusiness);
        docs.setPhoneBus(phoneBusiness);
        docs.setBank1Bus(bank1Business);
        docs.setBank2Bus(bank2Business);
        docs.setBank3Bus(bank3Business);
        docs.setBank4Bus(bank4Business);
        docs.setBank5Bus(bank5Business);
        docs.setBank6Bus(bank6Business);
        docs.setBank7Bus(bank7Business);
        docs.setNameCon(nameContractor);
        docs.setTownCon(townContractor);
        docs.setZc1Con(zc1Contractor);
        docs.setZc2Con(zc2Contractor);
        docs.setStreetCon(streetContractor);
        docs.setAddressCon(addressContractor);
        docs.setNipCon(nipContractor);
        docs.setPeselCon(peselContractor);
        docs.setNumber(number);
        docs.setNumberToPrint(numberDoc);
        docs.setAdditionalDoc(additionalDoc);
        docs.setIssuePlace(issuePlace);
        docs.setIssueDate(Date.valueOf(issueDate));
        try {
            docs.setListProductToAddDocs((ArrayList<ListProductsToAddDoc>) convertBytesToObject(listProduct));
            docs.setListRateProductsToAddDocs((ArrayList<RateProductsToAddDoc>) convertBytesToObject(ratesProduct));
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        docs.setPriceToPay(price);
        docs.setRateSumNet(cost);
        docs.setPriceToPayInWords(words);
        docs.setIssued(issued);
        docs.setRelatedDoc(relatedDoc);
        return docs;
    }
}
